import pygame
from pygame.locals import *
import random

# shape parameters
size = width, height = (800, 800)
road_w = int(width / 1.6)
roadmark_w = int(width / 80)
# location parameters
right_lane = width / 2 + road_w / 4
left_lane = width / 2 - road_w / 4
# animation parameters
speed = 3
pygame.init()
running = True
# set window size
screen = pygame.display.set_mode(size)
# set window title
pygame.display.set_caption("Car game")
# set background colour
screen.fill((0, 0, 190))
# apply changes
pygame.display.update()
# load player vehicle
car = pygame.image.load("car.png")
car_loc = car.get_rect()
car_loc.center = right_lane, height * 0.8
# load enemy vehicle
car2 = pygame.image.load("otherCar.png")
car2_loc = car2.get_rect()
car2_loc.center = left_lane, height * 0.2

color = (50, 50, 50)
counter = 0
score_value = 0
font = pygame.font.Font("freesansbold.ttf", 28)
textX = 10
textY = 10


def show_score(x, y):
    pygame.draw.rect(screen, (0, 0, 190), (105, 12, 40, 24))
    score = font.render("Score: " + str(score_value), True, (255, 255, 255))
    screen.blit(score, (x, y))


# game loop
while running:
    counter += 1
    if counter % 100 == 0:
        score_value += 1
    # game difficulty
    if counter == 1400:
        speed += 0.5
        counter = 0
        print("level up", speed)
    # enemy vehicle
    car2_loc[1] += speed
    if car2_loc[1] > height:
        # randomly select lane
        if random.randint(0, 1) == 0:
            car2_loc.center = right_lane, -200
        else:
            car2_loc.center = left_lane, -200
    # end game logic
    if car_loc[0] == car2_loc[0] and car2_loc[1] > car_loc[1] - 250:
        print("GAME OVER! YOU LOST!")
        break

    # event listeners
    for event in pygame.event.get():
        if event.type == QUIT:
            # collapse the app
            running = False
        # if the speed of the game gets too high, you may slow it down, but your score will be nullified
        if event.type == pygame.MOUSEBUTTONDOWN:
            score_value = 0
            speed = 1

        if event.type == KEYDOWN:
            # move user car to the left
            if event.key in [K_a, K_LEFT]:
                car_loc = car_loc.move([-int(road_w / 2), 0])
            # move user car to the right
            if event.key in [K_d, K_RIGHT]:
                car_loc = car_loc.move([int(road_w / 2), 0])
    if car_loc[0] > 600 or car_loc[0] < 100:
        print("OUT")
        running = False
        break
    # draw road
    pygame.draw.rect(screen, color, (width / 2 - road_w / 2, 0, road_w, height))
    # draw centre line
    pygame.draw.rect(screen, (255, 240, 60), (width / 2 - roadmark_w / 2, 0, roadmark_w, height))
    # draw left roadmark
    pygame.draw.rect(screen, (255, 255, 255), (width / 2 - road_w / 2 + roadmark_w * 2, 0, roadmark_w, height))
    # draw right roadmark
    pygame.draw.rect(screen, (255, 255, 255), (width / 2 + road_w / 2 - roadmark_w * 2.6, 0, roadmark_w, height))
    # place car images on the screen
    screen.blit(car, car_loc)
    screen.blit(car2, car2_loc)
    show_score(textX, textY)

    # apply changes
    pygame.display.update()

# closing application window
pygame.quit()
